name: docker-runner

on:
  repository_dispatch:
    types: [dev-push-images]

env:
  APP_NAME: ${{ github.event.client_payload.inputs.repo.APP_NAME }}
  IMAGE_TAG: ${{ github.event.client_payload.inputs.repo.IMAGE_TAG }}
  APP_ENV: ${{ github.event.client_payload.inputs.repo.APP_ENV }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  NEXUS_URL: "registry.matador.ais.co.th"
  NEXUS_PATH: "living/sit"
  NEXUS_USER: "living"
  CONTAINER_REPOSITORY: "ghcr.io"
  OWNER_NAME: "sompornic"
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}   # ใช้ PAT Token ที่มีสิทธิ์ push
  REPO_NAME: "helm-app"  # ชื่อ repo เป้าหมาย
  REPO_NAME_CD: "actionCD"  # ชื่อ repo เป้าหมาย


jobs:
  pull-and-push:
    runs-on: ubuntu-latest
    environment: develop

    steps:
      - name: Checkout pipelines
        uses: actions/checkout@v3

      - name: List working directory
        run: ls

      - name: Log in to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Debug Docker Info
        run: |
          docker info
          docker images
      - name: Pull Image from GHCR
        run: docker pull ${{ env.CONTAINER_REPOSITORY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
      
      - name: Tag Image for Nexus Repository
        run: docker tag ${{ env.CONTAINER_REPOSITORY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} ${{ env.NEXUS_URL }}/${{ env.NEXUS_PATH }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

      - name: Log in using Nexus credentials
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login ${{ env.NEXUS_URL }} -u ${{ env.NEXUS_USER }} --password-stdin
      
      - name: Push Image to Nexus Repository
        run: docker push ${{ env.NEXUS_URL }}/${{ env.NEXUS_PATH }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

  editHelm-and-autoTrigger:
    needs: pull-and-push
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Set FILE_PATH from APP_NAME
        run: |
          echo "FILE_PATH=${APP_NAME}/values.yaml" >> $GITHUB_ENV

      - name: Update Helm values.yaml via GitHub API
        run: |
          RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/$OWNER_NAME/$REPO_NAME/contents/$FILE_PATH")

          FILE_SHA=$(echo "$RESPONSE" | jq -r '.sha')
          FILE_CONTENT=$(echo "$RESPONSE" | jq -r '.content' | base64 -d)
          UPDATED_CONTENT=$(echo "$FILE_CONTENT" | sed "s|tag: .*|tag: $IMAGE_TAG|")
          ENCODED_CONTENT=$(echo "$UPDATED_CONTENT" | base64 -w 0)

          PAYLOAD=$(jq -n \
            --arg path "$FILE_PATH" \
            --arg message "Update image.tag to $IMAGE_TAG" \
            --arg content "$ENCODED_CONTENT" \
            --arg sha "$FILE_SHA" \
            '{ path: $path, message: $message, content: $content, sha: $sha }')

          curl -X PUT -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "https://api.github.com/repos/$OWNER_NAME/$REPO_NAME/contents/$FILE_PATH"

      - name: Trigger Helm Deployment
        run: |
          curl -X POST -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"event_type": "deploy", "client_payload": {"zone": "${{ env.APP_ENV }}", "appname": "${{ env.APP_NAME }}"}}' \
            "https://api.github.com/repos/$OWNER_NAME/$REPO_NAME_CD/dispatches"